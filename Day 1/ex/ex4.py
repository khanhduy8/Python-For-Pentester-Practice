import socket
import threading
import random

"""Đầu vào: một số nguyên dương

   Đầu ra: số nguyên tạo bởi phần từ số 1 cuối cùng trở về bên
   phải - của dạng binary của số đầu vào.

   Ví dụ::

     input_data = 5 # (0b101)
     output = 1

     input_data = 24 (11000)
     output = 1000

     input_data = 9 (1001)
     output = 1

   Hàm có sẵn: bin(10) == '0b1010'
   Hàm có sẵn tạo ra integer từ string: 69 == int('69')
   CHÚ Ý: đây là bài khó nhất chương 3, nên làm bài khác trước
   CHÚ Ý 2: code khi chạy chỉ chạy với 1 ví dụ nhưng khi
   "test" sẽ chạy với nhiều đầu vào khác nhau. Học viên
   đảm bảo xử lý dựa trên input_data, không phải data
   và làm đúng với mọi trường hợp.
   """

ip = '0.0.0.0'
port = 9004

def main():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((ip, port))
    server.listen(5)
    print(f'[*] Listening on {ip}:{port}')

    while(True):
        client, address = server.accept()
        print(f'[*] Accepted connection from {address[0]}:{address[1]}')
        client_handler = threading.Thread(target=handle_client, args={client,})
        client_handler.start()

def handle_client(client_socket):
    with client_socket as sock:
        rand_num = random.randint(0,1000)
        sock.send(str.encode(f'Hay lay tat ca cac chu so ben phai so 1 cuoi cung cua so nhi phan: {rand_num}'))
        request = sock.recv(1024)
        print(f'[*] Received: {request.decode("utf-8")}')
        try:
            print(f'Result: {solve(rand_num)}')
            if solve(rand_num) == request.decode('utf-8'):
                sock.send(str.encode('Right. Ban da doan dung'))
            else:
                sock.send(str.encode('Wrong. Ban da doan sai'))
        except:
            sock.send(str.encode('Chi gui so thoi nhe!!!'))

def solve(number):
    num = bin(number).split('b')[-1]
    for i in range(len(num) - 1, -1, -1):
        if int(num[i]) == 1:
            res = num[i:]
            break
    return res




if __name__ == '__main__':
    main()


